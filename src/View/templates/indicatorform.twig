{% extends "base.html.twig" %}

{% block title %} {{ title }} {% endblock %}

{% block content %}
    <div style="background-color:#4CB2DD; min-height: 100vh; display: flex;flex-direction: column; align-items: center; padding: 10px">
        {% include 'header.twig' %}



        <div class="flex-container flex-dir-column" style="width: 95%">

            <div id="title" style="align-self: center; text-align: center;background: white;border-radius: 50px; align-items: center; margin-bottom: 20px;margin-top: 10px;padding-left: 50px; padding-right: 50px">

            </div>

            <div class="hide cell flex-container"
                 style="background-color: transparent; display: flex; flex-direction: row; flex-wrap: wrap; margin-bottom: 20px"
                 id="response-container">
            </div>
            <div id="container-indicators" style="background: white;border-radius: 50px; align-items: center">

                <form class="cell align-center" >
                    <div class="grid-x text-center">
                        <div class="cell">
                            <h2 class="h2">¿Qué indicadores de interacción te interesa conocer?</h2>
                        </div>
                    </div>

                    <div class="flex-container" style="justify-content: space-around" id="container-zone">
                    </div>


                    <div class="text-center padding-1">
                        <button name="Get details!" class="button">Get details!</button>
                    </div>


                </form>
            </div>

        </div>


    </div>


    <script src="{{ base_url() }}/assets/js/widgetLib/widgetlib.js"></script>

    <script>
        let widgetList = [];

        function showResponses(response) {
            widgetList = [];

            let container = $("#response-container");
            container.removeClass('hide');

            container[0].innerHTML = '';
            let vals = Object.entries(response);

            for (let i = 0; i < vals.length; i++) {

                let widget = new Widget();
                let val = vals[i];

                let key = val[0];
                let content = val[1];

                widget.title = key;
                widget.schema = content['content'];
                widget.kind = content['kind'];
                widget.process();

                widgetList.push(widget);


                container.append(widget.render());
            }
        }

        function addToSegment(parent, list) {
            console.log(list)
            for (let i = 0; i < list.length; i++) {
                let indicator = list[i];
                let id = indicator.replace(/ /g, '_');

                let form_button = document.createElement('input');
                form_button.type = 'checkbox';
                form_button.classList.add('checkbox', 'indicator_checkbox');
                form_button.name = indicator;
                form_button.id = id + '_' + {{ courseid }};


                let label = document.createElement('label');
                label.setAttribute("for", i + '_' + {{ courseid }});
                label.innerText = indicator;
                let row = document.createElement('div');
                row.classList.add('row');
                row.append(form_button, label);
                parent.append(row);
            }
        }

        let showIndicators = function (val) {
            let ans = JSON.parse(val);
            console.log(ans);
            let individual_indicator_list = ans['Individuales'];
            let role = ans['role'];

            let indicators = $("#container-zone");

            let professor_indicators = document.createElement('DIV');

            let student_indicators = document.createElement('DIV');
            let student_title = document.createElement('P');
            student_title.classList.add('text-center', 'h3');
            student_title.innerText = 'Indicadores individuales';

            student_indicators.append(student_title);

            addToSegment(student_indicators, individual_indicator_list);
            indicators.append(student_indicators);

            if (role === 'professor') {
                let professor_indicator_list = ans['Grupales'];

                let professor_title = document.createElement('P');
                professor_title.classList.add('text-center', 'h3');
                professor_title.innerText = 'Indicadores grupales';
                professor_indicators.append(professor_title);

                addToSegment(professor_indicators, professor_indicator_list);
                indicators.append(professor_indicators);

            }

        };

        $(document).ready(function () {
            $("form").submit(function (e) {
                e.preventDefault();

                let formData = $(this).serializeArray();

                $.post('{{ base_url() }}/api/askIndicators/{{ courseid }}', {queries: formData}, function (ans) {
                    showResponses(JSON.parse(ans));
                });

            });

            $.ajax({
                url:'{{ base_url() }}/api/courses/details/{{ courseid }}',
                method: 'GET',
            }).done(function (ans)
            {
                ans = JSON.parse(ans);

                let container = document.createElement("DIV");
                container.style.display = 'flex';
                container.style.flexDirection = 'row';
                container.style.justifyContent = 'center';
                container.style.width = '100%';



                let title = document.createElement('H1');
                title.classList.add('h1');
                title.innerHTML = ans['name'];

                container.append(title);

                if (ans.role === 'student') {
                    let role = document.createElement("IMG");
                    role.src = '{{ base_url() }}/assets/logos/student_role/student.svg';
                    role.style.width='3vw';
                    role.alt = 'student';
                    role.style.marginLeft = '5px';
                    role.style.marginRight = '5px';

                    container.append(role);
                }


                $("#title").append(container);
            })

            $.ajax({
                url: '{{ base_url() }}/api/courses/getIndicators/{{ courseid }}',
                success: showIndicators,
                method: 'GET',
            }).fail(function (err) {
                let table_cont = $("#container-indicators");
                table_cont.empty();

                let container = document.createElement('DIV');
                container.style.width = '100%';
                container.style.display = 'flex';
                container.style.flexDirection = 'column';
                container.style.alignItems = 'center';


                let error = document.createElement('H1');
                error.style.textAlign = 'center';
                error.style.width = '100%';
                error.innerText = err.statusText;
                container.append(error);

                let redirect = document.createElement('A');
                redirect.classList.add('button', 'primary');
                redirect.href = '{{ base_url() }}';
                redirect.innerText = "Head to login!";
                container.append(redirect);

                table_cont.append(container);
            });
        })

    </script>

{% endblock %}